{"version":3,"sources":["FileService.js","App.js","reportWebVitals.js","index.js"],"names":["sendGetRequest","theUrl","a","axios","get","resp","data","console","error","App","props","React","useState","pageSize","setpageSize","inputMasterFile","setinputMasterFile","inputMasterListArray","setinputMasterListArray","beerNameFilterValue","setbeerNameFilterValue","brewerFilterValue","setbrewerFilterValue","stateCountryFilterValue","setstateCountryFilterValue","updatedOn","setupdatedOn","totalCount","settotalCount","inputFocus","setinputFocus","refBeerName","useRef","refBrewer","refStateCountry","useEffect","loadMasterList","beerName","brewerName","stateCountry","newArray","length","filter","obj","Beer","toUpperCase","includes","Brewer","StateCountry","applyFilters","changeFile","log","firstobj","DateTasted","sortedArray","sort","b","Paper","Box","sx","mx","width","textAlign","Typography","align","variant","flexGrow","m","p","Stack","direction","spacing","alignItems","justifyContent","TextField","required","id","inputRef","label","onChange","event","newValue","target","value","Button","onClick","current","focus","style","height","rows","columns","field","headerName","sortable","editable","rowsPerPageOptions","onPageSizeChange","e","pagination","autoPageSize","autoHeight","disableSelectionOnClick","components","Toolbar","initialState","sorting","sortModel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.345e1845.chunk.js","sourcesContent":["import axios from 'axios';\r\nexport async function getJsonFile(theUrl) {\r\n    //console.log('calling axios get to url', theUrl)\r\n    try {\r\n      await axios({\r\n        url: theUrl,\r\n        method: 'GET',\r\n        //responseType: 'text/xml', // important\r\n      }).then((response) => {\r\n        //console.log('axios response', response)\r\n        return response;\r\n      });\r\n    }\r\n    catch(err) {\r\n        console.log('axios error', err)\r\n        this.props.showError('ERROR', JSON.stringify(err));\r\n        return false;\r\n    }\r\n  }\r\nexport async function sendGetRequest(theUrl) {\r\n    try {\r\n        //console.log(theUrl)\r\n        const resp = await axios.get(theUrl);\r\n        //console.log(resp.data);\r\n        return resp.data;\r\n    } catch (err) {\r\n        // Handle Error Here\r\n        console.error(err);\r\n    }\r\n};\r\n","import './App.css';\nimport React, { useRef } from 'react';\n// npm run deploy\n//import inputMasterFile from './data/btg_master_list_20211003.json'\n//import inputMasterFile from 'https://github.com/mcqueene/the-tasting-app/blob/e4dd46ce51731314a8ec3c0d2d7a3f1db4e48704/btg_master_list_20211003.json'\n//import inputMasterFile from 'https://raw.githubusercontent.com/mcqueene/the-tasting-app/master/btg_master_list_20211003.json'\nimport { DataGrid, GridToolbarExport, GridToolbarContainer } from '@mui/x-data-grid';\nimport { TextField, Box, Typography, Paper } from '@mui/material';\nimport { sendGetRequest } from './FileService';\nimport Button from '@mui/material/Button';\nimport Stack from '@mui/material/Stack';\n//import { makeStyles } from '@mui/styles';\n\nconst App = (props) => {\n\n  //const url = 'https://raw.githubusercontent.com/mcqueene/the-tasting-app/master/btg_master_list_20211003.json'\n  //let fileArray = []\n  //const fileArray = getMasterFile()\n  //fileArray = sendGetRequest(url);\n  //console.log(fileArray)\n  const [pageSize, setpageSize] = React.useState(20);\n  const [inputMasterFile, setinputMasterFile] = React.useState([])\n  const [inputMasterListArray, setinputMasterListArray] = React.useState([]);\n  const [beerNameFilterValue, setbeerNameFilterValue] = React.useState('');\n  const [brewerFilterValue, setbrewerFilterValue] = React.useState('');\n  const [stateCountryFilterValue, setstateCountryFilterValue] = React.useState('');\n  const [updatedOn, setupdatedOn] = React.useState('');\n  const [totalCount, settotalCount] = React.useState(0);\n  const [inputFocus, setinputFocus] = React.useState('');\n  const refBeerName = useRef(null);\n  const refBrewer = useRef(null);\n  const refStateCountry = useRef(null);\n \n  //used to track when the user object if finally loaded\n  React.useEffect(() => {\n    loadMasterList()\n  }, [])\n\n  React.useEffect(() => {\n    const applyFilters = (beerName, brewerName, stateCountry) => {\n      let newArray = [];\n      if (beerName.length !== 0) {\n        newArray = inputMasterFile.filter((obj) => obj.Beer.toUpperCase().includes(beerName.toUpperCase()));\n        if (brewerName.length !== 0) {\n          newArray = newArray.filter((obj) => obj.Brewer.toUpperCase().includes(brewerName.toUpperCase()));\n        }\n        if (stateCountry.length !== 0) {\n          newArray = newArray.filter((obj) => obj.StateCountry.toUpperCase().includes(stateCountry.toUpperCase()));\n        }\n      }\n      else {\n        if (brewerName.length !== 0) {\n          newArray = inputMasterFile.filter((obj) => obj.Brewer.toUpperCase().includes(brewerName.toUpperCase()));\n          if (stateCountry.length !== 0) {\n            newArray = newArray.filter((obj) => obj.StateCountry.toUpperCase().includes(stateCountry.toUpperCase()));\n          }\n        }\n        else {\n          if (stateCountry.length !== 0) {\n            newArray = inputMasterFile.filter((obj) => obj.StateCountry.toUpperCase().includes(stateCountry.toUpperCase()));\n          }\n        }\n      }\n      setinputMasterListArray(newArray);\n    }\n    //run filter\n    applyFilters(beerNameFilterValue, brewerFilterValue, stateCountryFilterValue)\n  }, [beerNameFilterValue, brewerFilterValue, stateCountryFilterValue, inputMasterFile])\n\n\n  const onPageSizeChangeEvent = (e) => {\n    setpageSize(e);\n  }\n\n  const loadMasterList = async () => {\n    //const url = 'https://github.com/mcqueene/the-tasting-app/blob/e4dd46ce51731314a8ec3c0d2d7a3f1db4e48704/btg_master_list_20211003.json'\n    const url = 'https://raw.githubusercontent.com/mcqueene/the-tasting-app/master/btg_master_list.json'\n    //mrm for some reason the file is from the src direction and not the data sub directory\n    // i don't know why\n    const changeFile = await sendGetRequest(url)\n    console.log('file loaded from github with row count = ', changeFile.length)\n    settotalCount(changeFile.length)\n    const firstobj = changeFile[0]\n    setupdatedOn(firstobj.DateTasted)\n    console.log('last taste date', firstobj)\n\n    const sortedArray = [...changeFile].sort((a, b) => a.Beer > b.Beer ? 1 : -1);\n\n    setinputMasterFile(sortedArray)\n  }\n\n  const onBeerNameFilterChange = (event) => {\n    const newValue = event.target.value;\n    setbeerNameFilterValue(newValue);\n    setinputFocus('beername');\n  };\n  const onBrewerFilterChange = (event) => {\n    const newValue = event.target.value;\n    setbrewerFilterValue(newValue);\n    setinputFocus('brewer');\n  };\n  const onStateCountryFilterChange = (event) => {\n    const newValue = event.target.value;\n    setstateCountryFilterValue(newValue);\n    setinputFocus('statecountry');\n  };\n\n  const onClearFilterClick = () => {\n    setbeerNameFilterValue(''); \n    setbrewerFilterValue(''); \n    setstateCountryFilterValue('');\n    if(inputFocus === 'beername') {\n      refBeerName.current.focus();\n    }\n    if(inputFocus === 'brewer') {\n      refBrewer.current.focus();\n    }\n    if(inputFocus === 'statecountry') {\n      refStateCountry.current.focus();\n    }\n\n  }\n  const MyExportButton = () => {\n    return (\n      <GridToolbarContainer>\n        <GridToolbarExport />\n      </GridToolbarContainer>\n    );\n  }\n  const columns = [\n    {\n      field: \"Beer\",\n      headerName: \"Beer Name\",\n      sortable: true,\n      width: 290,\n    },\n    {\n      field: 'Brewer',\n      headerName: 'Brewer',\n      width: 180,\n      editable: false,\n    },\n    {\n      field: 'DateTasted',\n      headerName: 'Date',\n      width: 115,\n      editable: false,\n    },\n    {\n      field: 'StatedStyle',\n      headerName: 'Style',\n      width: 150,\n      editable: false,\n    },\n    {\n      field: 'ABV',\n      headerName: 'ABV',\n      width: 120,\n      editable: false,\n    },\n    {\n      field: 'Taste',\n      headerName: 'Taste',\n      width: 100,\n      editable: false,\n      sortable: false,\n    },\n    {\n      field: 'Style',\n      headerName: 'Style',\n      width: 100,\n      editable: false,\n      sortable: false,\n    },\n    {\n      field: 'OverallScore',\n      headerName: 'Overall',\n      width: 100,\n      editable: false,\n      sortable: false,\n    },\n    {\n      field: 'Container',\n      headerName: 'Container',\n      width: 150,\n      editable: false,\n    },\n    {\n      field: 'City',\n      headerName: 'City',\n      width: 150,\n      editable: false,\n    },\n    {\n      field: 'StateCountry',\n      headerName: 'StateCountry',\n      width: 150,\n      editable: false,\n    },\n    {\n      field: 'Vintage',\n      headerName: 'Vintage',\n      width: 150,\n      editable: false,\n    },\n    {\n      field: 'Comments',\n      headerName: 'Comments',\n      width: 250,\n      editable: false,\n    },\n  ];\n\n  return (\n\n    <Paper >\n      <Box>\n        <Box sx={{ mx: 'auto', width: 'auto', textAlign: 'center', }}>\n          <Typography align=\"center\" variant=\"h5\">The Tasting App</Typography>\n          <Typography align=\"center\" variant=\"subtitle1\">Updated on: {updatedOn} Filtered Count: {inputMasterListArray.length} Total Count: {totalCount}</Typography>\n        </Box>\n        <Box >\n          <Box sx={{ mx: 'auto', flexGrow: 1, textAlign: 'center', m: 1, p: 1 }}>\n            <Typography align=\"center\" variant=\"subtitle1\">Start typing in box below to begin filtering</Typography>\n            <Stack direction=\"row\" spacing={2} alignItems=\"center\" justifyContent=\"center\">\n              <TextField\n                required\n                id=\"inBeerName\"\n                inputRef={refBeerName}\n                label=\"Beer Name Filter\"\n                variant=\"outlined\"\n                onChange={onBeerNameFilterChange}\n                value={beerNameFilterValue}\n              />\n              <TextField\n                required\n                id=\"inBrewer\"\n                inputRef={refBrewer}\n                label=\"Brewer Filter\"\n                variant=\"outlined\"\n                onChange={onBrewerFilterChange}\n                value={brewerFilterValue}\n              />\n              <TextField\n                required\n                id=\"inStateCountry\"\n                inputRef={refStateCountry}\n                label=\"State/Country\"\n                variant=\"outlined\"\n                onChange={onStateCountryFilterChange}\n                value={stateCountryFilterValue}\n              />\n            </Stack>\n            <Stack direction=\"row\" sx={{p: 1}} spacing={2} alignItems=\"center\" justifyContent=\"center\">\n              <Button\n                onClick={onClearFilterClick}\n                variant=\"contained\">Clear Filters\n              </Button>\n            </Stack>\n          </Box>\n        </Box>\n        <div style={{ height: 600, width: '98%' }}>\n          <DataGrid\n            rows={inputMasterListArray}\n            columns={columns}\n            rowsPerPageOptions={[5, 10, 20, 30, 50, 100]}\n            pageSize={pageSize}\n            onPageSizeChange={onPageSizeChangeEvent}\n            pagination\n            autoPageSize\n            autoHeight={true}\n            disableSelectionOnClick\n            components={{\n              Toolbar: MyExportButton,\n            }}\n            initialState={{\n              sorting: {\n                sortModel: [\n                  {\n                    field: 'Beer',\n                    sort: 'asc',\n                  }\n                ],\n              },\n            }}\n          />\n        </div>\n\n      </Box>\n      <Typography align=\"center\" variant=\"subtitle2\">Last updated 10/23/2022</Typography>\n    </Paper>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}