{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["columns","field","headerName","sortable","width","editable","MyExportButton","App","props","React","useState","inputMasterListArray","setinputMasterListArray","beerNameFilterValue","setbeerNameFilterValue","brewerFilterValue","setbrewerFilterValue","Box","className","TextField","required","id","label","helperText","variant","onChange","event","newArray","newValue","target","value","length","inputMasterFile","filter","obj","Beer","toUpperCase","includes","Brewer","style","height","rows","rowsPerPageOptions","pageSize","disableSelectionOnClick","components","Toolbar","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.79184166.chunk.js","sourcesContent":["import './App.css';\nimport React from 'react';\nimport inputMasterFile from './data/btg_master_list_20211003.json'\nimport {DataGrid, GridToolbarExport, GridToolbarContainer } from '@mui/x-data-grid';\nimport {TextField,Box} from '@mui/material';\n\n\nconst columns = [\n  {\n    field: \"Beer\",\n    headerName: \"Beer Name\",\n    sortable: true,\n    width: 290,\n  },\n  {\n    field: 'Brewer',\n    headerName: 'Brewer',\n    width: 180,\n    editable: false,\n  },\n  {\n    field: 'DateTasted',\n    headerName: 'Date',\n    width: 110,\n    editable: false,\n  },\n  {\n    field: 'StatedStyle',\n    headerName: 'Style',\n    width: 150,\n    editable: false,\n  },\n  {\n    field: 'ABV',\n    headerName: 'ABV',\n    width: 120,\n    editable: false,\n  },\n  {\n    field: 'Taste',\n    headerName: 'Taste',\n    width: 100,\n    editable: false,\n    sortable: false,\n  },\n  {\n    field: 'Style',\n    headerName: 'Style',\n    width: 100,\n    editable: false,\n    sortable: false,\n  },\n  {\n    field: 'OverallScore',\n    headerName: 'Overall',\n    width: 100,\n    editable: false,\n    sortable: false,\n  },\n  {\n    field: 'Container',\n    headerName: 'Container',\n    width: 150,\n    editable: false,\n  },\n  {\n    field: 'City',\n    headerName: 'City',\n    width: 150,\n    editable: false,\n  },\n  {\n    field: 'StateCountry',\n    headerName: 'StateCountry',\n    width: 150,\n    editable: false,\n  },\n  {\n    field: 'Comments',\n    headerName: 'Comments',\n    width: 250,\n    editable: false,\n  },\n  { field: 'id',\n  headerName: 'row#',\n  sortable: true,\n  width: 115\n},\n];\n\n\nconst MyExportButton = () => {\n  return (\n    <GridToolbarContainer>\n      <GridToolbarExport />\n    </GridToolbarContainer>\n  );\n  }\nconst App = (props) => {\n  const [inputMasterListArray, setinputMasterListArray] = React.useState([]);\n  const [beerNameFilterValue, setbeerNameFilterValue] = React.useState('');\n  const [brewerFilterValue, setbrewerFilterValue] = React.useState('');\n\n  const onBeerNameFilterChange = (event) => {\n    let newArray = [];\n    const newValue = event.target.value;\n    if(newValue.length !== 0) {\n      newArray = inputMasterFile.filter((obj) => obj.Beer.toUpperCase().includes(newValue.toUpperCase()));\n      if(brewerFilterValue.length > 0) {\n        newArray = newArray.filter((obj) => obj.Brewer.toUpperCase().includes(brewerFilterValue.toUpperCase()));\n      }\n    }\n    else {\n      newArray = inputMasterFile.filter((obj) => obj.Brewer.toUpperCase().includes(brewerFilterValue.toUpperCase()));\n    }\n  setinputMasterListArray(newArray);\n    setbeerNameFilterValue(newValue);\n  };\n  const onBrewerFilterChange = (event) => {\n    let newArray = [];\n    const newValue = event.target.value;\n    if(newValue.length !== 0) {\n      newArray = inputMasterFile.filter((obj) => obj.Brewer.toUpperCase().includes(newValue.toUpperCase()));\n      if(beerNameFilterValue.length > 0) {\n        newArray = newArray.filter((obj) => obj.Beer.toUpperCase().includes(beerNameFilterValue.toUpperCase()));\n      }\n    }\n    else {\n      //console.log('filter on ', beerNameFilterValue.toUpperCase)\n      newArray = inputMasterFile.filter((obj) => obj.Beer.toUpperCase().includes(beerNameFilterValue.toUpperCase()));\n    }\n    setinputMasterListArray(newArray);\n    setbrewerFilterValue(newValue);\n  };\n\n\n  return (\n    <Box>\n      <br/>\n    <div className=\"App\">\n      <TextField\n          required\n          id=\"outlined-required\"\n          label=\"Beer Name Filter\"\n          helperText=\"Begin typing the beer name to start filtering\"\n          variant=\"outlined\"\n          onChange={onBeerNameFilterChange}\n          value={beerNameFilterValue}\n      />\n      <TextField\n          required\n          id=\"outlined-required\"\n          label=\"Brewer Filter\"\n          helperText=\"Begin typing the brewer name to start filtering\"\n          variant=\"outlined\"\n          onChange={onBrewerFilterChange}\n          value={brewerFilterValue}\n      />\n\n      <div style={{ height: 600, width: '98%' }}>\n            <DataGrid\n                rows={inputMasterListArray}\n                columns={columns}\n                rowsPerPageOptions={[5,10,20,30,50,100]}\n                pageSize={20}\n                disableSelectionOnClick\n                components={{\n                  Toolbar: MyExportButton,\n                }}\n            />\n        </div>\n    </div>\n\n    </Box>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}