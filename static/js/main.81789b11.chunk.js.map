{"version":3,"sources":["FileService.js","App.js","reportWebVitals.js","index.js"],"names":["sendGetRequest","theUrl","a","axios","get","resp","data","console","error","App","props","React","useState","pageSize","setpageSize","inputMasterFile","setinputMasterFile","inputMasterListArray","setinputMasterListArray","beerNameFilterValue","setbeerNameFilterValue","brewerFilterValue","setbrewerFilterValue","useEffect","loadMasterList","changeFile","log","length","Paper","Box","sx","mx","width","textAlign","Typography","align","variant","flexGrow","m","p","TextField","required","id","label","helperText","onChange","event","newArray","newValue","target","value","filter","obj","Beer","toUpperCase","includes","Brewer","style","height","rows","columns","field","headerName","sortable","editable","rowsPerPageOptions","onPageSizeChange","e","pagination","autoPageSize","autoHeight","disableSelectionOnClick","components","Toolbar","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.81789b11.chunk.js","sourcesContent":["import axios from 'axios';\r\nexport async function getJsonFile(theUrl) {\r\n    //console.log('calling axios get to url', theUrl)\r\n    try {\r\n      await axios({\r\n        url: theUrl,\r\n        method: 'GET',\r\n        //responseType: 'text/xml', // important\r\n      }).then((response) => {\r\n        //console.log('axios response', response)\r\n        return response;\r\n      });\r\n    }\r\n    catch(err) {\r\n        console.log('axios error', err)\r\n        this.props.showError('ERROR', JSON.stringify(err));\r\n        return false;\r\n    }\r\n  }\r\nexport async function sendGetRequest(theUrl) {\r\n    try {\r\n        //console.log(theUrl)\r\n        const resp = await axios.get(theUrl);\r\n        //console.log(resp.data);\r\n        return resp.data;\r\n    } catch (err) {\r\n        // Handle Error Here\r\n        console.error(err);\r\n    }\r\n};\r\n","import './App.css';\nimport React from 'react';\n// npm run deploy\n//import inputMasterFile from './data/btg_master_list_20211003.json'\n//import inputMasterFile from 'https://github.com/mcqueene/the-tasting-app/blob/e4dd46ce51731314a8ec3c0d2d7a3f1db4e48704/btg_master_list_20211003.json'\n//import inputMasterFile from 'https://raw.githubusercontent.com/mcqueene/the-tasting-app/master/btg_master_list_20211003.json'\nimport {DataGrid, GridToolbarExport, GridToolbarContainer } from '@mui/x-data-grid';\nimport {TextField,Box, Typography, Paper} from '@mui/material';\nimport {sendGetRequest} from './FileService';\n//import { makeStyles } from '@mui/styles';\n\nconst App = (props) => {\n\n  //const url = 'https://raw.githubusercontent.com/mcqueene/the-tasting-app/master/btg_master_list_20211003.json'\n  //let fileArray = []\n  //const fileArray = getMasterFile()\n  //fileArray = sendGetRequest(url);\n  //console.log(fileArray)\n  const [pageSize, setpageSize] = React.useState(20);\n  const [inputMasterFile, setinputMasterFile] = React.useState([])\n  const [inputMasterListArray, setinputMasterListArray] = React.useState([]);\n  const [beerNameFilterValue, setbeerNameFilterValue] = React.useState('');\n  const [brewerFilterValue, setbrewerFilterValue] = React.useState('');\n  const updatedOn = '5/7/2022'\n\n  //used to track when the user object if finally loaded\n   React.useEffect(() => {\n     loadMasterList()\n   }, [])\n\n  const onPageSizeChangeEvent = (e) => {\n    console.log(\"onPageSizeChangeEvent\", e)\n    setpageSize(e);\n  }\n\n  const loadMasterList = async () => {\n      //const url = 'https://github.com/mcqueene/the-tasting-app/blob/e4dd46ce51731314a8ec3c0d2d7a3f1db4e48704/btg_master_list_20211003.json'\n      const url = 'https://raw.githubusercontent.com/mcqueene/the-tasting-app/master/btg_master_list.json'\n      //mrm for some reason the file is from the src direction and not the data sub directory\n      // i don't know why\n      const changeFile = await sendGetRequest(url)\n      console.log('file loaded from github with row count = ',changeFile.length)\n      setinputMasterFile(changeFile)\n  }\n\n  const onBeerNameFilterChange = (event) => {\n    let newArray = [];\n    const newValue = event.target.value;\n    if(newValue.length !== 0) {\n      newArray = inputMasterFile.filter((obj) => obj.Beer.toUpperCase().includes(newValue.toUpperCase()));\n      if(brewerFilterValue.length > 0) {\n        newArray = newArray.filter((obj) => obj.Brewer.toUpperCase().includes(brewerFilterValue.toUpperCase()));\n      }\n    }\n    else {\n      newArray = inputMasterFile.filter((obj) => obj.Brewer.toUpperCase().includes(brewerFilterValue.toUpperCase()));\n    }\n  setinputMasterListArray(newArray);\n    setbeerNameFilterValue(newValue);\n  };\n  const onBrewerFilterChange = (event) => {\n    let newArray = [];\n    const newValue = event.target.value;\n    if(newValue.length !== 0) {\n      newArray = inputMasterFile.filter((obj) => obj.Brewer.toUpperCase().includes(newValue.toUpperCase()));\n      if(beerNameFilterValue.length > 0) {\n        newArray = newArray.filter((obj) => obj.Beer.toUpperCase().includes(beerNameFilterValue.toUpperCase()));\n      }\n    }\n    else {\n      //console.log('filter on ', beerNameFilterValue.toUpperCase)\n      newArray = inputMasterFile.filter((obj) => obj.Beer.toUpperCase().includes(beerNameFilterValue.toUpperCase()));\n    }\n    setinputMasterListArray(newArray);\n    setbrewerFilterValue(newValue);\n  };\n\n  const MyExportButton = () => {\n    return (\n      <GridToolbarContainer>\n        <GridToolbarExport />\n      </GridToolbarContainer>\n    );\n  }\n    const columns = [\n      {\n        field: \"Beer\",\n        headerName: \"Beer Name\",\n        sortable: true,\n        width: 290,\n      },\n      {\n        field: 'Brewer',\n        headerName: 'Brewer',\n        width: 180,\n        editable: false,\n      },\n      {\n        field: 'DateTasted',\n        headerName: 'Date',\n        width: 110,\n        editable: false,\n      },\n      {\n        field: 'StatedStyle',\n        headerName: 'Style',\n        width: 150,\n        editable: false,\n      },\n      {\n        field: 'ABV',\n        headerName: 'ABV',\n        width: 120,\n        editable: false,\n      },\n      {\n        field: 'Taste',\n        headerName: 'Taste',\n        width: 100,\n        editable: false,\n        sortable: false,\n      },\n      {\n        field: 'Style',\n        headerName: 'Style',\n        width: 100,\n        editable: false,\n        sortable: false,\n      },\n      {\n        field: 'OverallScore',\n        headerName: 'Overall',\n        width: 100,\n        editable: false,\n        sortable: false,\n      },\n      {\n        field: 'Container',\n        headerName: 'Container',\n        width: 150,\n        editable: false,\n      },\n      {\n        field: 'City',\n        headerName: 'City',\n        width: 150,\n        editable: false,\n      },\n      {\n        field: 'StateCountry',\n        headerName: 'StateCountry',\n        width: 150,\n        editable: false,\n      },\n      {\n        field: 'Comments',\n        headerName: 'Comments',\n        width: 250,\n        editable: false,\n      },\n      { field: 'id',\n      headerName: 'row#',\n      sortable: true,\n      width: 115\n    },\n    ];\n\n  return (\n\n    <Paper >\n      <Box>\n        <Box sx={{mx: 'auto',width: 'auto', textAlign: 'center', }}>\n          <Typography align=\"center\" variant=\"h5\">The Tasting App</Typography>\n          <Typography align=\"center\" variant=\"subtitle1\">Updated on: {updatedOn} Total Number: {inputMasterListArray.length}</Typography>\n        </Box>\n        <Box >\n          <Box sx={{mx: 'auto', flexGrow: 1, textAlign: 'center', m: 1, p:1 }}>\n            <TextField\n                required\n                id=\"outlined-required\"\n                label=\"Beer Name Filter\"\n                helperText=\"Begin typing the beer name to start filtering\"\n                variant=\"outlined\"\n                onChange={onBeerNameFilterChange}\n                value={beerNameFilterValue}\n            />\n            <TextField\n                required\n                id=\"outlined-required\"\n                label=\"Brewer Filter\"\n                helperText=\"Begin typing the brewer name to start filtering\"\n                variant=\"outlined\"\n                onChange={onBrewerFilterChange}\n                value={brewerFilterValue}\n            />\n          </Box>\n          </Box>\n          <div style={{ height: 600, width: '98%' }}>\n                <DataGrid\n                    rows={inputMasterListArray}\n                    columns={columns}\n                    rowsPerPageOptions={[5,10,20,30,50,100]}\n                    pageSize={pageSize}\n                    onPageSizeChange={onPageSizeChangeEvent}\n                    pagination\n                    autoPageSize\n                    autoHeight={true}\n                    disableSelectionOnClick\n                    components={{\n                      Toolbar: MyExportButton,\n                    }}\n                />\n            </div>\n\n      </Box>\n    </Paper>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}